<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnActualizar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>